# Generated by Django 3.2 on 2021-05-30 18:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shop', '0003_delete_s'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('drivers_license', models.BooleanField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Сумма доставки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Курьер',
                'verbose_name_plural': 'Курьеры',
                'db_table': 'curiers',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Сумма доставки')),
                ('delivery_date', models.DateField(verbose_name='Дата доставки')),
                ('curier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.curier')),
            ],
            options={
                'verbose_name': 'Доставка',
                'verbose_name_plural': 'Доставки',
                'db_table': 'deliveries',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес склада')),
                ('square', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Площадь склада')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
                'db_table': 'storages',
            },
        ),
        migrations.AlterField(
            model_name='product',
            name='best_before',
            field=models.PositiveIntegerField(verbose_name='Срок годности'),
        ),
        migrations.AlterField(
            model_name='product',
            name='export_date',
            field=models.DateTimeField(verbose_name='Дата производства'),
        ),
        migrations.CreateModel(
            name='StorageRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('square', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Площадь складского помещения')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.storage')),
                ('storage_conditions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.storage_conditions')),
            ],
            options={
                'verbose_name': 'Складское помещение',
                'verbose_name_plural': 'Складские помещения',
                'db_table': 'storage_rooms',
            },
        ),
        migrations.CreateModel(
            name='Storage_Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Сумма доставки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Кладовщик',
                'verbose_name_plural': 'Кладовщики',
                'db_table': 'storage_workers',
            },
        ),
        migrations.AddField(
            model_name='storage',
            name='storage_worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.storage_worker'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100, verbose_name='Состояние платежа')),
                ('payment_date', models.DateField(verbose_name='Дата платежа')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(verbose_name='Дата заказа')),
                ('total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Сумма заказа')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cart')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.delivery')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.payment')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'orders',
            },
        ),
    ]
